package com.tpnor;

import com.tpnor.util.ImageUtil;
import com.tpnor.util.RequestUtil;
import com.tpnor.util.TenorUtil;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Random;

import static spark.Spark.*;

public class Tpnor {

    private static byte[] cachedImage;

    public static void main(String[] args) {
        port(3332);

        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();

        try {
            ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File("JakesHandwriting.ttf")));
        } catch (Exception e) {
            e.printStackTrace();
        }

        Font font = new Font("JakesHandwriting", Font.PLAIN, 135), font2 = new Font("JakesHandwriting", Font.PLAIN, 75);

        try {
            cachedImage = ImageUtil.getBytesFromImage(ImageIO.read(new File("eboys.png")));
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(0);
            return;
        }

        get("*", ((request, response) -> {
            response.type("image/gif");

            if(request.pathInfo().equalsIgnoreCase("/") || request.pathInfo().equalsIgnoreCase("/favicon.ico")) {
                return cachedImage;
            }

            BufferedImage bufferedImage = ImageUtil.getBufferedImage(cachedImage);
            String url;

            if(!request.pathInfo().contains("-")) url = RequestUtil.getFinalURL(new URL("https://tenor.com/" + request.pathInfo().substring(1))).toString();
            else url = request.url().replace("/", "");

            String foundGifURL = TenorUtil.getTenorGif(url);
            if(foundGifURL == null) return cachedImage;

            URL url2 = new URL(foundGifURL);
            BufferedImage im2 = ImageUtil.scale(ImageIO.read(url2), 150, 150);
            Graphics2D g = bufferedImage.createGraphics();
            g.drawImage(im2, ((bufferedImage.getWidth() - im2.getWidth()) / 2) + 15,
                    ((bufferedImage.getHeight() - im2.getHeight()) / 2) + 50, null);

            File hairDir = new File("hairs/");
            File[] files = hairDir.listFiles();
            Random random = new Random();

            assert files != null;
            File hairFile = files[random.nextInt(files.length)];

            g.drawImage(ImageIO.read(hairFile), 0, 0, null);

            g.setFont(font);
            g.setColor(Color.RED);
            g.drawString("Fuck Your", 55, 90);

            g.setFont(font2);
            g.setColor(Color.RED);
            g.drawString("Discord      Gifs", 45, 186);

            g.setFont(font2);
            g.setColor(Color.RED);
            g.drawString("yzy              szn", 15, 380);

            g.dispose();

            return ImageUtil.getBytesFromImage(bufferedImage);
        }));

        init();

    }


}
